Step 2: Implement Evict method
How do we implement evict method?
When size of map reaches max capacity, we need to find item with lowest frequency count.

There are 2 problems:

We have to iterate through all values of frequencies map, find lowest count and
 remove corresponding key from both maps.
 This will take O(n) time.

Also, what if there are multiple keys with same frequency count?
How do we find least recently used?
That’s not possible because HashMap does not store the order of insertion.

To solve both of above problems we need to add one more data structure:
 Sorted map with frequency as map-keys and ‘list of item-keys with same frequency’ as map-values.

 Awesome! Problem solved:

 We can add new item can to the end of the list with frequency 1.

 We can find the list with lowest frequency in O(1), since map is sorted by frequencies.

 We can delete the first item of the list (of lowest frequency) since that will be least recently used.
 Also O(1).

 Thus, both insert and delete are now O(1) i.e. constant time operations.